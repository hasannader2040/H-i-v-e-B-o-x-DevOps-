on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'phase4/**'
      

name: phase4_ci pipeline

jobs:
  sonarqube:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}  # Should be set to a valid URL, e.g., https://sonar.yourdomain.com
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_PROJECT_KEY: hasannader2040_restful-opensensemap-Api   # Add your project key here
        SONAR_ORGANIZATION: hasannader2040  # Add your organization here

    - name: SonarQube Quality Gate check
      id: sonarqube-quality-gate-check
      uses: sonarsource/sonarqube-quality-gate-action@v1.0.0
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    - name: "Show SonarQube Quality Gate Status"
      run: echo "The Quality Gate status is ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"

  # Integration Testing Job
  integration_tests:
    runs-on: ubuntu-latest
    needs: sonarqube
    services:
      docker:
        image: hassannader2040/temperature-app
        ports:
          - 5000:5000

    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install test dependencies
        run: pip install -r requirements.txt

      - name: Wait for the app to be ready
        run: sleep 10

      - name: Run integration tests
        run: pytest tests/integration/test_api.py

  # Semgrep Security Scan
  security_scan:
    runs-on: ubuntu-latest
    needs: [sonarqube, integration_tests]
    steps:
      - name: Run Semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          config: 'r2c-security-audit'  # Use an appropriate rule set

  # Terrascan Security Scan
  terrascan:
    runs-on: ubuntu-latest
    needs: [security_scan]
    steps:
      - name: Install Terrascan
        run: |
          curl -L https://github.com/accurics/terrascan/releases/download/v1.14.0/terrascan_1.14.0_linux_amd64.tar.gz | tar xz -C /usr/local/bin terrascan

      - name: Run Terrascan
        run: terrascan scan -i k8s -d ./path_to_your_kubernetes_manifests  # Update with the correct path
