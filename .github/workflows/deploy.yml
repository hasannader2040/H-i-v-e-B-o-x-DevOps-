name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - new
  pull_request:
    branches:
      - new

jobs:
  # Stage 1: Linting
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install flake8
          pip install -r requirements.txt

      - name: Lint code and Dockerfile
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
          hadolint Dockerfile

  # Stage 2: Build Docker Image
  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        run: |
          docker build -t hasan2/hasan-api:temperature-app ./working_directory

  # Stage 3: Testing
  test:
    runs-on: ubuntu-latest
    needs: build
    services:
      docker:
        image: hasan2/hasan-api:temperature-app
        ports:
          - 5000:5000
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install test dependencies
        run: pip install -r requirements.txt

      - name: Run unit tests
        run: |
          pytest tests/

      - name: Test /version endpoint
        run: |
          curl -s http://127.0.0.1:5000/version | grep "<EXPECTED_VERSION>"

  # Stage 4: Security Checks
  security:
    runs-on: ubuntu-latest
    needs: [lint, build, test]
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Run OpenSSF Scorecard
        uses: ossf/scorecard-action@v2
        with:
          results-file: results.sarif

      - name: Upload Scorecard results
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: results.sarif

  # Stage 5: Deploy to Docker Hub
  deploy:
    runs-on: ubuntu-latest
    needs: security
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image to DockerHub
        run: docker push hasan2/hasan-api:temperature-app
