name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - new
  pull_request:
    branches:
      - new

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install flake8
          pip install -r ./phase3/requirements.txt

      - name: Lint Dockerfile with Hadolint Docker image
        run: |
          docker run --rm -i hadolint/hadolint < phase4/Dockerfile

      - name: Lint code
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude=myenv
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --exclude=myenv

  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        run: |
          docker build -t myapp -f phase3/Dockerfile ./phase3

  test:
    runs-on: ubuntu-latest
    needs: build
    services:
      docker:
        image: my-flask-app
        ports:
          - 5000:5000
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install test dependencies
        run: pip install -r phase3/requirements.txt

      - name: Run unit tests
        run: |
          pytest tests/

      - name: Test /version endpoint
        run: |
          curl -s http://127.0.0.1:5000/version | grep "<EXPECTED_VERSION>"

  security:
    runs-on: ubuntu-latest
    needs: [lint, build, test]
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Run OpenSSF Scorecard
        uses: ossf/scorecard-action@v2.1.2
        with:
          results_file: results.sarif
          results_format: sarif

      - name: Upload Scorecard results
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: results.sarif
